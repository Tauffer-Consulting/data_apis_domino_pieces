{
    "NewsApiHeadlinesPiece": {
        "name": "NewsApiHeadlinesPiece",
        "dependency": {
            "dockerfile": null,
            "requirements_file": "requirements.txt"
        },
        "tags": [],
        "style": {
            "node_label": "NewsAPI Headlines",
            "node_type": "default",
            "node_style": {
                "backgroundColor": "#ebebeb"
            },
            "useIcon": true,
            "icon_class_name": "fluent:news-16-regular",
            "iconStyle": {
                "cursor": "pointer"
            }
        },
        "description": "This Piece uses the News API to retrieve the top headlines from a given source or country.\nReferences:\n- https://newsapi.org/\n- https://newsapi.org/docs/endpoints/top-headlines",
        "container_resources": {
            "requests": {
                "cpu": "100m",
                "memory": "128Mi"
            },
            "limits": {
                "cpu": "500m",
                "memory": "512Mi"
            }
        },
        "input_schema": {
            "$defs": {
                "CategoryType": {
                    "enum": [
                        "business",
                        "entertainment",
                        "general",
                        "health",
                        "science",
                        "sports",
                        "technology"
                    ],
                    "title": "CategoryType",
                    "type": "string"
                },
                "CountryType": {
                    "enum": [
                        "all",
                        "ae",
                        "ar",
                        "at",
                        "au",
                        "be",
                        "bg",
                        "br",
                        "ca",
                        "ch",
                        "cn",
                        "co",
                        "cu",
                        "cz",
                        "de",
                        "eg",
                        "fr",
                        "gb",
                        "gr",
                        "hk",
                        "hu",
                        "id",
                        "ie",
                        "il",
                        "in",
                        "it",
                        "jp",
                        "kr",
                        "lt",
                        "lv",
                        "ma",
                        "mx",
                        "my",
                        "ng",
                        "nl",
                        "no",
                        "nz",
                        "ph",
                        "pl",
                        "pt",
                        "ro",
                        "rs",
                        "ru",
                        "sa",
                        "se",
                        "sg",
                        "si",
                        "sk",
                        "th",
                        "tr",
                        "tw",
                        "ua",
                        "us",
                        "ve",
                        "za"
                    ],
                    "title": "CountryType",
                    "type": "string"
                },
                "LanguageType": {
                    "enum": [
                        "ar",
                        "de",
                        "en",
                        "es",
                        "fr",
                        "he",
                        "it",
                        "nl",
                        "no",
                        "pt",
                        "ru",
                        "sv",
                        "ud",
                        "zh"
                    ],
                    "title": "LanguageType",
                    "type": "string"
                }
            },
            "properties": {
                "query": {
                    "description": "Query to search for.",
                    "title": "Query",
                    "type": "string"
                },
                "category": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/CategoryType"
                        }
                    ],
                    "default": "general",
                    "description": "Category to filter by. Options are: `business`, `entertainment`, `general`, `health`, `science`, `sports`, `technology`."
                },
                "country": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/CountryType"
                        }
                    ],
                    "default": "all",
                    "description": "Country to filter by. Options are: `all`, `ae`, `ar`, `at`, `au`, `be`, `bg`, `br`, `ca`, `ch`, `cn`, `co`, `cu`, `cz`, `de`, `eg`, `fr`, `gb`, `gr`, `hk`, `hu`, `id`, `ie`, `il`, `in`, `it`, `jp`, `kr`, `lt`, `lv`, `ma`, `mx`, `my`, `ng`, `nl`, `no`, `nz`, `ph`, `pl`, `pt`, `ro`, `rs`, `ru`, `sa`, `se`, `sg`, `si`, `sk`, `th`, `tr`, `tw`, `ua`, `us`, `ve`, `za`."
                },
                "language": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/LanguageType"
                        }
                    ],
                    "default": "en",
                    "description": "Language to filter by. Options are: `ar`, `de`, `en`, `es`, `fr`, `he`, `it`, `nl`, `no`, `pt`, `ru`, `sv`, `ud`, `zh`."
                },
                "number_of_results": {
                    "default": 20,
                    "description": "Number of results to return",
                    "maximum": 100,
                    "minimum": 1,
                    "title": "Number Of Results",
                    "type": "integer"
                }
            },
            "required": [
                "query"
            ],
            "title": "InputModel",
            "type": "object"
        },
        "output_schema": {
            "$defs": {
                "ArticleModel": {
                    "properties": {
                        "source": {
                            "description": "Source of article.",
                            "title": "Source",
                            "type": "string"
                        },
                        "title": {
                            "description": "Title of article.",
                            "title": "Title",
                            "type": "string"
                        },
                        "author": {
                            "description": "Author of article.",
                            "title": "Author",
                            "type": "string"
                        },
                        "description": {
                            "description": "Description of article.",
                            "title": "Description",
                            "type": "string"
                        },
                        "publishedAt": {
                            "description": "Date article was published, in ISO format.",
                            "title": "Publishedat",
                            "type": "string"
                        },
                        "url": {
                            "description": "URL of article.",
                            "title": "Url",
                            "type": "string"
                        },
                        "url_to_image": {
                            "default": "",
                            "description": "Image associated with article.",
                            "title": "Url To Image",
                            "type": "string"
                        }
                    },
                    "required": [
                        "source",
                        "title",
                        "author",
                        "description",
                        "publishedAt",
                        "url"
                    ],
                    "title": "ArticleModel",
                    "type": "object"
                }
            },
            "properties": {
                "message": {
                    "description": "Output message to log.",
                    "title": "Message",
                    "type": "string"
                },
                "articles": {
                    "description": "List of articles.",
                    "items": {
                        "$ref": "#/$defs/ArticleModel"
                    },
                    "title": "Articles",
                    "type": "array"
                }
            },
            "required": [
                "message",
                "articles"
            ],
            "title": "OutputModel",
            "type": "object"
        },
        "secrets_schema": {
            "properties": {
                "NEWSAPI_API_KEY": {
                    "description": "News API API Key.",
                    "title": "Newsapi Api Key",
                    "type": "string"
                }
            },
            "required": [
                "NEWSAPI_API_KEY"
            ],
            "title": "SecretsModel",
            "type": "object"
        },
        "source_url": "https://github.com/Tauffer-Consulting/data_apis_domino_pieces/tree/main/pieces/NewsApiHeadlinesPiece"
    },
    "DogRandomFactsPiece": {
        "name": "DogRandomFactsPiece",
        "dependency": {
            "dockerfile": null,
            "requirements_file": "requirements.txt"
        },
        "tags": [],
        "style": {
            "node_label": "Dog Random Facts",
            "node_type": "default",
            "node_style": {
                "backgroundColor": "#ebebeb"
            },
            "useIcon": true,
            "icon_class_name": "bxs:dog",
            "iconStyle": {
                "cursor": "pointer"
            }
        },
        "description": "This Piece uses the Dog API to get a random dog fact.\n- https://dog-api.kinduff.com/api/facts",
        "container_resources": {
            "requests": {
                "cpu": "100m",
                "memory": "128Mi"
            },
            "limits": {
                "cpu": "500m",
                "memory": "512Mi"
            }
        },
        "input_schema": {
            "properties": {},
            "title": "InputModel",
            "type": "object"
        },
        "output_schema": {
            "properties": {
                "dog_fact": {
                    "default": "",
                    "description": "A random dog fact.",
                    "title": "Dog Fact",
                    "type": "string"
                }
            },
            "title": "OutputModel",
            "type": "object"
        },
        "secrets_schema": null,
        "source_url": "https://github.com/Tauffer-Consulting/data_apis_domino_pieces/tree/main/pieces/DogRandomFactsPiece"
    },
    "DogRandomPicturePiece": {
        "name": "DogRandomPicturePiece",
        "dependency": {
            "dockerfile": null,
            "requirements_file": "requirements.txt"
        },
        "tags": [],
        "style": {
            "node_label": "Dog Random Picture",
            "node_type": "default",
            "node_style": {
                "backgroundColor": "#ebebeb"
            },
            "useIcon": true,
            "icon_class_name": "bxs:dog",
            "iconStyle": {
                "cursor": "pointer"
            }
        },
        "description": "This Piece uses the Dog API to get a random dog picture.\n- https://dog.ceo/dog-api/",
        "container_resources": {
            "requests": {
                "cpu": "100m",
                "memory": "128Mi"
            },
            "limits": {
                "cpu": "500m",
                "memory": "512Mi"
            }
        },
        "input_schema": {
            "properties": {
                "return_string": {
                    "default": true,
                    "description": "Return the image as a base64 encoded string.",
                    "title": "Return String",
                    "type": "boolean"
                },
                "return_file": {
                    "default": false,
                    "description": "Return the image file.",
                    "title": "Return File",
                    "type": "boolean"
                },
                "return_url": {
                    "default": false,
                    "description": "Return the image url.",
                    "title": "Return Url",
                    "type": "boolean"
                }
            },
            "title": "InputModel",
            "type": "object"
        },
        "output_schema": {
            "properties": {
                "image_base64_string": {
                    "default": null,
                    "description": "Image as base64 encoded string.",
                    "title": "Image Base64 String",
                    "type": "string"
                },
                "image_file_path": {
                    "default": null,
                    "description": "Path to the image file.",
                    "title": "Image File Path",
                    "type": "string"
                },
                "image_url": {
                    "default": null,
                    "description": "URL to the image.",
                    "title": "Image Url",
                    "type": "string"
                }
            },
            "title": "OutputModel",
            "type": "object"
        },
        "secrets_schema": null,
        "source_url": "https://github.com/Tauffer-Consulting/data_apis_domino_pieces/tree/main/pieces/DogRandomPicturePiece"
    },
    "AlphaVantageDailyPiece": {
        "name": "AlphaVantageDailyPiece",
        "dependency": {
            "dockerfile": null,
            "requirements_file": "requirements.txt"
        },
        "tags": [],
        "style": {
            "node_label": "AlphaVantage Daily",
            "node_type": "default",
            "node_style": {
                "backgroundColor": "#ebebeb"
            },
            "useIcon": true,
            "icon_class_name": "ant-design:stock-outlined",
            "iconStyle": {
                "cursor": "pointer"
            }
        },
        "description": "This Piece uses the AlphaVantage API to get daily stock data.\n- https://www.alphavantage.co/",
        "container_resources": {
            "requests": {
                "cpu": "100m",
                "memory": "128Mi"
            },
            "limits": {
                "cpu": "500m",
                "memory": "512Mi"
            }
        },
        "input_schema": {
            "$defs": {
                "OutputSizeTypes": {
                    "enum": [
                        "compact",
                        "full"
                    ],
                    "title": "OutputSizeTypes",
                    "type": "string"
                }
            },
            "properties": {
                "symbol": {
                    "default": "AAPL",
                    "description": "The stock symbol.",
                    "title": "Symbol",
                    "type": "string"
                },
                "output_size": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/OutputSizeTypes"
                        }
                    ],
                    "default": "compact",
                    "description": "The size of the output data. Options are `compact` (100 data points) and full (full-length data). Default is `compact`."
                },
                "max_data_points": {
                    "default": -1,
                    "description": "The maximum number of data points to return. Default is -1, which returns all data points.",
                    "title": "Max Data Points",
                    "type": "integer"
                }
            },
            "title": "InputModel",
            "type": "object"
        },
        "output_schema": {
            "properties": {
                "data_file_path": {
                    "default": "",
                    "description": "Path to the data file.",
                    "title": "Data File Path",
                    "type": "string"
                }
            },
            "title": "OutputModel",
            "type": "object"
        },
        "secrets_schema": {
            "properties": {
                "ALPHA_VANTAGE_API_KEY": {
                    "description": "API key for Alpha Vantage data API.",
                    "title": "Alpha Vantage Api Key",
                    "type": "string"
                }
            },
            "required": [
                "ALPHA_VANTAGE_API_KEY"
            ],
            "title": "SecretsModel",
            "type": "object"
        },
        "source_url": "https://github.com/Tauffer-Consulting/data_apis_domino_pieces/tree/main/pieces/AlphaVantageDailyPiece"
    },
    "NewsApiArticlesPiece": {
        "name": "NewsApiArticlesPiece",
        "dependency": {
            "dockerfile": null,
            "requirements_file": "requirements.txt"
        },
        "tags": [],
        "style": {
            "node_label": "NewsAPI Articles",
            "node_type": "default",
            "node_style": {
                "backgroundColor": "#ebebeb"
            },
            "useIcon": true,
            "icon_class_name": "fluent:news-16-regular",
            "iconStyle": {
                "cursor": "pointer"
            }
        },
        "description": "This Piece uses the News API to retrieve full articles.\nReferences:\n- https://newsapi.org/\n- https://newsapi.org/docs/endpoints/everything",
        "container_resources": {
            "requests": {
                "cpu": "100m",
                "memory": "128Mi"
            },
            "limits": {
                "cpu": "500m",
                "memory": "512Mi"
            }
        },
        "input_schema": {
            "$defs": {
                "LanguageType": {
                    "enum": [
                        "ar",
                        "de",
                        "en",
                        "es",
                        "fr",
                        "he",
                        "it",
                        "nl",
                        "no",
                        "pt",
                        "ru",
                        "sv",
                        "ud",
                        "zh"
                    ],
                    "title": "LanguageType",
                    "type": "string"
                },
                "SortByType": {
                    "enum": [
                        "relevancy",
                        "popularity",
                        "publishedAt"
                    ],
                    "title": "SortByType",
                    "type": "string"
                }
            },
            "properties": {
                "query": {
                    "description": "Query to search for.",
                    "title": "Query",
                    "type": "string"
                },
                "from_date": {
                    "default": "2023-11-01",
                    "description": "From date.",
                    "format": "date",
                    "title": "From Date",
                    "type": "string"
                },
                "to_date": {
                    "default": "2023-11-06",
                    "description": "To date.",
                    "format": "date",
                    "title": "To Date",
                    "type": "string"
                },
                "sort_by": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/SortByType"
                        }
                    ],
                    "default": "relevancy",
                    "description": "Sort by. Options are: `relevancy`, `popularity`, `publishedAt`."
                },
                "language": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/LanguageType"
                        }
                    ],
                    "default": "en",
                    "description": "Language to filter by. Options are: `ar`, `de`, `en`, `es`, `fr`, `he`, `it`, `nl`, `no`, `pt`, `ru`, `sv`, `ud`, `zh`."
                },
                "number_of_results": {
                    "default": 20,
                    "description": "Number of results to return.",
                    "maximum": 100,
                    "minimum": 1,
                    "title": "Number Of Results",
                    "type": "integer"
                }
            },
            "required": [
                "query"
            ],
            "title": "InputModel",
            "type": "object"
        },
        "output_schema": {
            "$defs": {
                "ArticleModel": {
                    "properties": {
                        "source": {
                            "description": "Source of article.",
                            "title": "Source",
                            "type": "string"
                        },
                        "title": {
                            "description": "Title of article.",
                            "title": "Title",
                            "type": "string"
                        },
                        "author": {
                            "description": "Author of article.",
                            "title": "Author",
                            "type": "string"
                        },
                        "description": {
                            "description": "Description of article.",
                            "title": "Description",
                            "type": "string"
                        },
                        "publishedAt": {
                            "description": "Date article was published, in ISO format.",
                            "title": "Publishedat",
                            "type": "string"
                        },
                        "url": {
                            "description": "URL of article.",
                            "title": "Url",
                            "type": "string"
                        },
                        "url_to_image": {
                            "default": "",
                            "description": "Image associated with article.",
                            "title": "Url To Image",
                            "type": "string"
                        },
                        "content": {
                            "description": "Content of article.",
                            "title": "Content",
                            "type": "string"
                        }
                    },
                    "required": [
                        "source",
                        "title",
                        "author",
                        "description",
                        "publishedAt",
                        "url",
                        "content"
                    ],
                    "title": "ArticleModel",
                    "type": "object"
                }
            },
            "properties": {
                "message": {
                    "description": "Output message to log",
                    "title": "Message",
                    "type": "string"
                },
                "articles": {
                    "description": "List of articles",
                    "items": {
                        "$ref": "#/$defs/ArticleModel"
                    },
                    "title": "Articles",
                    "type": "array"
                }
            },
            "required": [
                "message",
                "articles"
            ],
            "title": "OutputModel",
            "type": "object"
        },
        "secrets_schema": {
            "properties": {
                "NEWSAPI_API_KEY": {
                    "description": "News API API Key",
                    "title": "Newsapi Api Key",
                    "type": "string"
                }
            },
            "required": [
                "NEWSAPI_API_KEY"
            ],
            "title": "SecretsModel",
            "type": "object"
        },
        "source_url": "https://github.com/Tauffer-Consulting/data_apis_domino_pieces/tree/main/pieces/NewsApiArticlesPiece"
    },
    "CovidApiContriesPiece": {
        "name": "CovidApiContriesPiece",
        "dependency": {
            "dockerfile": null,
            "requirements_file": "requirements.txt"
        },
        "tags": [],
        "style": {
            "node_label": "Covid-19 Countries",
            "node_type": "default",
            "node_style": {
                "backgroundColor": "#ebebeb"
            },
            "useIcon": true,
            "icon_class_name": "ion:earth-sharp",
            "iconStyle": {
                "cursor": "pointer"
            }
        },
        "description": "This piece get covid 19 data for all countries",
        "container_resources": {
            "requests": {
                "cpu": "100m",
                "memory": "128Mi"
            },
            "limits": {
                "cpu": "500m",
                "memory": "512Mi"
            }
        },
        "input_schema": {
            "properties": {
                "countries": {
                    "items": {
                        "type": "string"
                    },
                    "title": "Countries",
                    "type": "array"
                }
            },
            "required": [
                "countries"
            ],
            "title": "InputModel",
            "type": "object"
        },
        "output_schema": {
            "$defs": {
                "OutputInnerModel": {
                    "properties": {
                        "Country": {
                            "items": {
                                "type": "string"
                            },
                            "title": "Country",
                            "type": "array"
                        },
                        "Cases per One Million": {
                            "items": {
                                "type": "number"
                            },
                            "title": "Cases Per One Million",
                            "type": "array"
                        }
                    },
                    "required": [
                        "Country",
                        "Cases per One Million"
                    ],
                    "title": "OutputInnerModel",
                    "type": "object"
                }
            },
            "properties": {
                "data": {
                    "$ref": "#/$defs/OutputInnerModel"
                }
            },
            "required": [
                "data"
            ],
            "title": "OutputModel",
            "type": "object"
        },
        "secrets_schema": null,
        "source_url": "https://github.com/Tauffer-Consulting/data_apis_domino_pieces/tree/main/pieces/CovidApiContriesPiece"
    },
    "NasaEarthImagePiece": {
        "name": "NasaEarthImagePiece",
        "dependency": {
            "dockerfile": null,
            "requirements_file": "requirements.txt"
        },
        "tags": [],
        "style": {
            "node_label": "NASA Earth Image",
            "node_type": "default",
            "node_style": {
                "backgroundColor": "#ebebeb"
            },
            "useIcon": true,
            "icon_class_name": "ion:earth-sharp",
            "iconStyle": {
                "cursor": "pointer"
            }
        },
        "description": "This Piece uses the NASA EPIC API to get satellite images of the Earth.\nReferences: \n- https://epic.gsfc.nasa.gov/about/api \n- https://api.nasa.gov/",
        "container_resources": {
            "requests": {
                "cpu": "100m",
                "memory": "128Mi"
            },
            "limits": {
                "cpu": "500m",
                "memory": "512Mi"
            }
        },
        "input_schema": {
            "$defs": {
                "LocationTypes": {
                    "enum": [
                        "random",
                        "America",
                        "Atlantic Ocean",
                        "Africa",
                        "Asia",
                        "Pacific Ocean"
                    ],
                    "title": "LocationTypes",
                    "type": "string"
                }
            },
            "properties": {
                "location": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/LocationTypes"
                        }
                    ],
                    "default": "random",
                    "description": "Retrieve image centered approximately on this location."
                }
            },
            "title": "InputModel",
            "type": "object"
        },
        "output_schema": {
            "properties": {
                "image_url": {
                    "default": null,
                    "description": "URL of the image.",
                    "title": "Image Url",
                    "type": "string"
                },
                "image_base64_string": {
                    "default": null,
                    "description": "Image as base64 encoded string.",
                    "title": "Image Base64 String",
                    "type": "string"
                },
                "image_file_path": {
                    "default": null,
                    "description": "Path to the image file.",
                    "title": "Image File Path",
                    "type": "string"
                }
            },
            "title": "OutputModel",
            "type": "object"
        },
        "secrets_schema": {
            "properties": {
                "NASA_API_KEY": {
                    "default": "DEMO_KEY",
                    "description": "API key for NASA Earth Image API.",
                    "title": "Nasa Api Key",
                    "type": "string"
                }
            },
            "title": "SecretsModel",
            "type": "object"
        },
        "source_url": "https://github.com/Tauffer-Consulting/data_apis_domino_pieces/tree/main/pieces/NasaEarthImagePiece"
    },
    "TicketmasterUpcommingEventsPiece": {
        "name": "TicketmasterUpcommingEventsPiece",
        "dependency": {
            "dockerfile": null,
            "requirements_file": "requirements.txt"
        },
        "tags": [],
        "style": {
            "node_label": "Ticketmaster Upcomming Events",
            "node_type": "default",
            "node_style": {
                "backgroundColor": "#ebebeb"
            },
            "useIcon": true,
            "icon_class_name": "uil:ticket",
            "iconStyle": {
                "cursor": "pointer"
            }
        },
        "description": "This Piece uses the Ticketmaster API to get upcomming events based on a search options.\n -https://developer.ticketmaster.com/products-and-docs/apis/discovery-api/v2/",
        "container_resources": {
            "requests": {
                "cpu": "100m",
                "memory": "128Mi"
            },
            "limits": {
                "cpu": "500m",
                "memory": "512Mi"
            }
        },
        "input_schema": {
            "properties": {
                "max_number_of_events": {
                    "default": 10,
                    "description": "Maximum number of events to return.",
                    "maximum": 100,
                    "minimum": 1,
                    "title": "Max Number Of Events",
                    "type": "integer"
                },
                "keyword": {
                    "default": null,
                    "description": "Keyword to search for.",
                    "title": "Keyword",
                    "type": "string"
                },
                "end_date": {
                    "default": null,
                    "description": "End date for the search. Must be a future date.",
                    "format": "date",
                    "title": "End Date",
                    "type": "string"
                },
                "city": {
                    "default": null,
                    "description": "City to search for.",
                    "title": "City",
                    "type": "string"
                },
                "country_code": {
                    "default": null,
                    "description": "Country code to search for. Must be a valid ISO 3166-1 alpha-2 code.",
                    "maxLength": 2,
                    "minLength": 2,
                    "title": "Country Code",
                    "type": "string"
                }
            },
            "title": "InputModel",
            "type": "object"
        },
        "output_schema": {
            "$defs": {
                "EventObjectType": {
                    "properties": {
                        "name": {
                            "description": "Name of the event type.",
                            "title": "Name",
                            "type": "string"
                        },
                        "event_date": {
                            "description": "Date of the event.",
                            "format": "date",
                            "title": "Event Date",
                            "type": "string"
                        },
                        "event_location": {
                            "description": "Location of the event.",
                            "title": "Event Location",
                            "type": "string"
                        },
                        "classification": {
                            "default": null,
                            "description": "Classification of the event.",
                            "title": "Classification",
                            "type": "string"
                        },
                        "url": {
                            "default": null,
                            "description": "URL of the event type.",
                            "title": "Url",
                            "type": "string"
                        },
                        "image_url": {
                            "default": null,
                            "description": "Image URL of the event type.",
                            "title": "Image Url",
                            "type": "string"
                        }
                    },
                    "required": [
                        "name",
                        "event_date",
                        "event_location"
                    ],
                    "title": "EventObjectType",
                    "type": "object"
                }
            },
            "properties": {
                "events": {
                    "description": "List of events.",
                    "items": {
                        "$ref": "#/$defs/EventObjectType"
                    },
                    "title": "Events",
                    "type": "array"
                },
                "results_formatted": {
                    "description": "Text with formatted results.",
                    "title": "Results Formatted",
                    "type": "string"
                }
            },
            "required": [
                "events",
                "results_formatted"
            ],
            "title": "OutputModel",
            "type": "object"
        },
        "secrets_schema": {
            "properties": {
                "TICKETMASTER_API_KEY": {
                    "description": "API key for the Ticketmaster API.",
                    "title": "Ticketmaster Api Key",
                    "type": "string"
                }
            },
            "required": [
                "TICKETMASTER_API_KEY"
            ],
            "title": "SecretsModel",
            "type": "object"
        },
        "source_url": "https://github.com/Tauffer-Consulting/data_apis_domino_pieces/tree/main/pieces/TicketmasterUpcommingEventsPiece"
    }
}